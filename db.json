{
  "issues": [
    {
      "id": 1,
      "severity": "Critical",
      "title": "SQL Injection",
      "description": "An attacker on the internet can gain unauthorised access to the data contained in the web application's database.\r\n\r\nSQL Injection is the name of a hacking technique where the user of an application is able to alter the content of a database query. This often occurs when unchecked input from the user is sent straight to the database and executed. An attacker can exploit this vulnerability to gain access to the database contents and sometimes to the underlying operating system as well. \r\n\r\nFrom a single SQL injection vulnerability, it is usually possible to retrieve the entire contents of all databases that the database user running the vulnerable query has access to.",
      "remediation": "SQL Injection can be prevented by validating user input and using prepared SQL statements.",
      "ignored": false,
      "targets": [
        {
          "id": 1,
          "address": "123.123.123.123",
          "discovered_at": "2020/02/14"
        }
      ]
    },
    {
      "id": 5,
      "severity": "High",
      "title": "Unsupported Unix Version",
      "description": "The version of the Unix Operating System in use is no longer supported by the vendor. Because it is not supported, it no longer receives security updates or patches which leaves the system exposed to unpatched security weaknesses.",
      "remediation": "Upgrade the version of the Operating System in use to a supported version.",
      "ignored": false,
      "targets": [
        {
          "id": 6,
          "address": "1234567891234.some-subdomain.some-domain-name.net",
          "discovered_at": "2022/04/15"
        },
        {
          "id": 1,
          "address": "123.123.123.123",
          "discovered_at": "2022/04/15"
        }
      ]
    },
    {
      "id": 3,
      "severity": "High",
      "title": "Unsupported Adobe Acrobat Version",
      "description": "The version of Adobe Acrobat in use is no longer supported by the vendor. Adobe no longer produces security updates or patches for this application which could leave the system running it exposed to unpatched security weaknesses.\r\n",
      "remediation": "Upgrade the version of Adobe Acrobat in use to the latest available supported version.\r\n",
      "ignored": true,
      "targets": [
        {
          "id": 8,
          "address": "1259595-laptop",
          "discovered_at": "2022/01/24"
        }
      ]
    },
    {
      "id": 4,
      "severity": "High",
      "title": "Command Line History Publicly Accessible",
      "description": "The web server exposes a file containing a history of commands run on the system's command line. The file is publicly exposed and can be accessed without authentication.\r\n\r\nThe .bash_history file stores a history of user commands entered at the command prompt, and is likely to contain sensitive information.",
      "remediation": "Remove public access to the .bash_history file, so that unauthenticated attackers cannot access it remotely.",
      "ignored": false,
      "targets": [
        {
          "id": 1,
          "address": "123.123.123.123",
          "discovered_at": "2022/05/12"
        }
      ]
    },
    {
      "id": 26,
      "severity": "Medium",
      "title": "WordPress Admin Panel Exposed To The Internet",
      "description": "A WordPress administrative interface was found to be publicly accessible over the internet. An attacker can attempt to log in to this interface to gain unauthorised access to administrative functionality.\r\n\r\nThe default configuration of WordPress makes the administrative interface accessible at the URL /admin or /wp-admin, although it can be configured at other common locations or a custom URL path. Also, there is no 'Account Lockout' mechanism in place by default. Automated password guessing attacks against administrative user account of WordPress (e.g. the 'admin' user) are common, and administrative interfaces such as this one are frequently attacked.",
      "remediation": "Where possible, administrative interfaces should be restricted to only authorised hosts (eg. only via a whitelisted IP address or via a secure VPN connection)",
      "ignored": true,
      "targets": [
        {
          "id": 1,
          "address": "123.123.123.123",
          "discovered_at": "2022/03/01"
        }
      ]
    },
    {
      "id": 55,
      "severity": "Low",
      "title": "Missing X-Content-Type-Options Header",
      "description": "The remote website does not include the header \"X-Content-Type-Options: nosniff\" in its responses. This header instructs browsers not to guess, or \"sniff\", the MIME type of a page and instead use the value provided in the \"Content-Type\" header.\r\n\r\nThis can be helpful in preventing attacks where content is injected into website pages to cause browsers to treat them as valid scripts or stylesheets, which can then be loaded by other domains in the \"script\" or \"style\" HTML tags and partially read. This can lead to sensitive information on these pages being disclosed if an authenticated user clicks a link sent to them by an attacker.",
      "remediation": "Add the header \"X-Content-Type-Options: nosniff\" to responses for all web pages.",
      "ignored": false,
      "targets": [
        {
          "id": 36,
          "address": "mywebservice.com",
          "discovered_at": "2021/12/25"
        }
      ]
    },
    {
      "id": 84,
      "severity": "Low",
      "title": "Vulnerable TLS Protocol Version",
      "description": "A service on the host was found to support a weak version of the 'Transport Layer Security' (TLS) encryption protocol. TLS is used to encrypt data in transit between a client and server, and older versions of the protocol (TLS 1.0 and TLS 1.1) have been deprecated in favour of the more secure, newer versions of the protocol (TLS 1.2, TLS 1.3).",
      "remediation": "The most secure versions of the TLS encryption protocol are TLS 1.2 and TLS 1.3. Where possible, TLS 1.0 and TLS 1.1 should be disabled entirely to avoid the possibility of an attacker downgrading the encryption protocol in use to one of these older, insecure versions.",
      "ignored": false,
      "targets": [
        {
          "id": 41,
          "address": "worker-1.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 42,
          "address": "worker-2.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 43,
          "address": "worker-3.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 44,
          "address": "worker-4.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 45,
          "address": "worker-5.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 46,
          "address": "worker-6.my-service.com",
          "discovered_at": "2022/04/02"
        },
        {
          "id": 47,
          "address": "worker-7.my-service.com",
          "discovered_at": "2022/04/02"
        }
      ]
    },
    {
      "id": 63,
      "severity": "Medium",
      "title": "Antivirus potentially outdated",
      "description": "The affected host makes use of antivirus software, to help discover malware and other malicious software on the host.\r\n\r\nThe program's virus definitions are outdated or unrecognised or another problem was identified with the installation. This means that it may not be switched on or receiving updates as expected, and the host may not have any alternative antivirus software installed to protect against malware.",
      "remediation": "Verify that active antivirus software is installed and running on the host, and that it is receiving regular updates.",
      "ignored": false,
      "targets": [
        {
          "id": 8,
          "address": "1259595-laptop",
          "discovered_at": "2022/02/08"
        }
      ]
    },
    {
      "id": 49,
      "severity": "Critical",
      "title": "Command Injection",
      "description": "An attacker can execute arbitrary commands on the web server. By sending requests to the web server which include malicious commands, an attacker may be able to gain control over the server or gain unauthorised access to its resources. If successful, this could also be leveraged to compromise other connected systems.\r\n\r\nCommand injection attacks use malicious requests to trick vulnerable web applications into running commands on the application's host operating system. This is made possible where unsafe user supplied data is passed into a system command.",
      "remediation": "Wherever possible, avoid running system commands that include untrusted user input, such as HTTP request parameters.\r\n\r\nIf this is not possible, look for safer alternatives to running system commands, such as making use of platform / native API calls.",
      "ignored": false,
      "targets": [
        {
          "id": 36,
          "address": "mywebservice.com",
          "discovered_at": "2022/06/25"
        }
      ]
    }
  ],
  "targets": [
    {
      "id": 1,
      "address": "123.123.123.123"
    },
    {
      "id": 2,
      "address": "123.234.123.234"
    },
    {
      "id": 3,
      "address": "testsite.org"
    },
    {
      "id": 6,
      "address": "1234567891234.some-subdomain.some-domain-on-the-inter.net"
    },
    {
      "id": 8,
      "address": "1259595-laptop"
    },
    {
      "id": 36,
      "address": "mywebservice.com"
    },
    {
      "id": 41,
      "address": "worker-1.my-service.com"
    },
    {
      "id": 42,
      "address": "worker-2.my-service.com"
    },
    {
      "id": 43,
      "address": "worker-3.my-service.com"
    },
    {
      "id": 44,
      "address": "worker-4.my-service.com"
    },
    {
      "id": 45,
      "address": "worker-5.my-service.com"
    },
    {
      "id": 46,
      "address": "worker-6.my-service.com"
    },
    {
      "id": 47,
      "address": "worker-7.my-service.com"
    }
  ]
}